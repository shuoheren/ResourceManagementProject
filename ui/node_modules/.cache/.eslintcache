[{"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/index.js":"1","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/App.js":"2","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/reportWebVitals.js":"3","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Login/Login.js":"4","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/RegistrationPage/RegistrationPage.js":"5","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Context/AppContext.js":"6","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/ResetPassword/ResetPassword.js":"7","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Resources/ResourcePage/ResourcePage.js":"8","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Resources/ResourceTable/ResourceTable.js":"9","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Resources/AddResource/AddResource.js":"10","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Resources/ResourcedetailsUpdate/ResourcedetailsUpdate.js":"11","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Projects/ProjectPage/ProjectPage.js":"12","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Projects/NewProjectForm/NewProjectForm.js":"13","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Projects/ResourceList/ResourceList.js":"14","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Projects/ProjectDropdown/ProjectDropdown.js":"15","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Bars/Navbar/Navbar.js":"16","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Bars/SidebarToggler/SidebarToggler.js":"17","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Bars/Sidebar/Sidebar.js":"18","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Projects/LinkedResourceList/LinkedResourceList.js":"19","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Formulas/Formula.js":"20","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/config/urls.js":"21"},{"size":323,"mtime":1698088770650,"results":"22","hashOfConfig":"23"},{"size":1860,"mtime":1698114263848,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1698088770650,"results":"25","hashOfConfig":"23"},{"size":2510,"mtime":1698204130368,"results":"26","hashOfConfig":"23"},{"size":3265,"mtime":1698204606512,"results":"27","hashOfConfig":"23"},{"size":274,"mtime":1698088969318,"results":"28","hashOfConfig":"23"},{"size":2199,"mtime":1698206571675,"results":"29","hashOfConfig":"23"},{"size":3470,"mtime":1698206281313,"results":"30","hashOfConfig":"23"},{"size":2711,"mtime":1698103559008,"results":"31","hashOfConfig":"23"},{"size":2753,"mtime":1698101667370,"results":"32","hashOfConfig":"23"},{"size":1323,"mtime":1698106942929,"results":"33","hashOfConfig":"23"},{"size":3875,"mtime":1698206920831,"results":"34","hashOfConfig":"23"},{"size":1074,"mtime":1698204024779,"results":"35","hashOfConfig":"23"},{"size":1597,"mtime":1698114152418,"results":"36","hashOfConfig":"23"},{"size":735,"mtime":1698112269011,"results":"37","hashOfConfig":"23"},{"size":1518,"mtime":1698204267599,"results":"38","hashOfConfig":"23"},{"size":471,"mtime":1698088770646,"results":"39","hashOfConfig":"23"},{"size":1043,"mtime":1698088770646,"results":"40","hashOfConfig":"23"},{"size":1675,"mtime":1698114062510,"results":"41","hashOfConfig":"23"},{"size":3837,"mtime":1698207197860,"results":"42","hashOfConfig":"23"},{"size":162,"mtime":1698205495885,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"162tkxz",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/index.js",[],[],"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/App.js",["115"],[],"import React, { useState } from \"react\";\nimport Navbar from \"./Bars/Navbar/Navbar\";\nimport SidebarToggler from \"./Bars/SidebarToggler/SidebarToggler\";\nimport Sidebar from \"./Bars/Sidebar/Sidebar\";\nimport Login from \"./Pages/Login/Login\";\nimport RegistrationPage from \"./Pages/RegistrationPage/RegistrationPage\";\nimport ResourcePage from \"./Pages/Resources/ResourcePage/ResourcePage\";\nimport Project from \"./Pages/Projects/ProjectPage/ProjectPage\";\nimport Formula from \"./Pages/Formulas/Formula\";\nimport { AppContext } from \"./Context/AppContext\";\nimport ResetPassword from \"./Pages/ResetPassword/ResetPassword\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isSidebarExtended, setIsSidebarExtended] = useState(true);\n  const [page, setPage] = useState(\"login\");\n  const [username, setUsername] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  const contextValue = {\n    isLoggedIn,\n    setIsLoggedIn,\n    isSidebarExtended,\n    setIsSidebarExtended,\n    page,\n    setPage,\n    username,\n    setUsername,\n    user,\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      <div>\n        <Navbar />\n        <div className=\"container\">\n          {isLoggedIn && (\n            <div className=\"sidebar-container\">\n              {isSidebarExtended && <Sidebar />}\n              <SidebarToggler />\n            </div>\n          )}\n          <div className=\"main-content\">\n            {page === \"login\" && <Login />}\n            {page === \"registration\" && <RegistrationPage />}\n            {page === \"Resource\" && <ResourcePage />}\n            {page === \"Project\" && <Project />}\n            {page === \"Formula\" && <Formula />}\n            {page === \"resetPassword\" && <ResetPassword />}\n          </div>\n        </div>\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/reportWebVitals.js",[],[],"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Login/Login.js",["116","117","118"],[],"import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../../Context/AppContext\";\nimport \"./Login.css\";\nimport App from \"../../App\";\nimport { BASE_URL } from \"../../config/urls\";\n\nconst Login = () => {\n  const { setIsLoggedIn, setPage, setUsername } = useContext(AppContext);\n  const [inputUsername, setInputUsername] = useState(\"\");\n  const [inputPassword, setInputPassword] = useState(\"\");\n\n  const handleSuccessfulLogin = (user) => {\n    AppContext.isLoggedIn = true;\n    AppContext.isSidebarExtended = true;\n    AppContext.username = user.userName;\n    AppContext.user = user;\n    console.log(user.userName);\n    console.log(AppContext.username);\n    console.log(AppContext.user);\n    setUsername(user.userName); // Update the username in the global context\n    setIsLoggedIn(true);\n    setPage(\"Resource\");\n  };\n\n  const handleLogin = async () => {\n    if (inputUsername === \"4321\" && inputPassword === \"4321\") {\n      handleSuccessfulLogin(inputUsername);\n    } else {\n      try {\n        const response = await axios.get(`${BASE_URL}/users/${inputUsername}`);\n\n        if (response.data && response.data.password === inputPassword) {\n          handleSuccessfulLogin(response.data);\n        } else {\n          alert(\"Invalid username or password\");\n        }\n      } catch (error) {\n        console.error(\"Error logging in:\", error);\n        alert(\"Error during login. Please try again.\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h2>Login</h2>\n      <div className=\"input-field\">\n        <label>Username</label>\n        <input\n          type=\"text\"\n          placeholder=\"\"\n          value={inputUsername}\n          onChange={(e) => setInputUsername(e.target.value)}\n        />\n      </div>\n      <div className=\"input-field\">\n        <label>Password</label>\n        <input\n          type=\"password\"\n          placeholder=\"\"\n          value={inputPassword}\n          onChange={(e) => setInputPassword(e.target.value)}\n        />\n      </div>\n      <div className=\"options\">\n        <label>\n          <input type=\"checkbox\" /> Remember me\n        </label>\n        <a href=\"#\" onClick={() => setPage(\"resetPassword\")}>\n          Forgot password?\n        </a>\n      </div>\n      <button onClick={handleLogin}>Login</button>\n      <div className=\"signup\">\n        or{\" \"}\n        <a href=\"#\" onClick={() => setPage(\"registration\")}>\n          Sign Up\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/RegistrationPage/RegistrationPage.js",["119"],[],"import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../../Context/AppContext\";\nimport \"./RegistrationPage.css\";\nimport { BASE_URL } from \"../../config/urls\";\nconst RegistrationPage = () => {\n  const { setIsLoggedIn, setPage } = useContext(AppContext);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const redirectToLogin = () => {\n    // window.location.href = \"http://localhost:3000\";\n  };\n  const handleRegistration = async () => {\n    // Check if username is hardcoded value\n    if (username === \"4321\" && password === \"4321\" && email === \"4321\") {\n      setIsLoggedIn(true);\n      setPage(\"Resource\");\n      return;\n    }\n\n    try {\n      // Check if username already exists\n      const checkResponse = await axios.get(`${BASE_URL}/users/${username}`);\n\n      if (checkResponse.status === 200) {\n        alert(\"Username is already taken. Please choose another.\");\n        return;\n      }\n    } catch (error) {\n      // If the error is due to a 404 status (username not found), continue with registration.\n      // Otherwise, show a generic error.\n      if (error.response && error.response.status !== 404) {\n        console.error(\"Error checking username:\", error);\n        alert(\"Error during registration. Please try again.\");\n        return;\n      }\n    }\n\n    // Register the user\n    try {\n      const registerResponse = await axios.post(`${BASE_URL}/users`, {\n        userName: username,\n        password: password,\n        email: email,\n        role: \"USER\",\n      });\n\n      if (registerResponse.data && registerResponse.data.userName) {\n        setIsLoggedIn(true);\n        AppContext.username = username;\n        AppContext.user = registerResponse.data;\n        setPage(\"Resource\");\n      } else {\n        alert(\"Registration failed!\");\n      }\n    } catch (error) {\n      console.error(\"Error registering user:\", error);\n      alert(\"Error during registration. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"registration-container\">\n      <h2>Registration</h2>\n      <form onSubmit={(e) => e.preventDefault()}>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n\n        <a href=\"#\" onClick={redirectToLogin} className=\"signin-link\">\n          Already have an account? Sign in here\n        </a>\n        <button onClick={handleRegistration}>Register</button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegistrationPage;\n","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Context/AppContext.js",[],[],"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/ResetPassword/ResetPassword.js",["120"],[],"import React, { useState } from \"react\";\nimport axios from \"axios\"; // You need to install axios using npm or yarn\nimport \"./ResetPassword.css\";\nimport { BASE_URL } from \"../../config/urls\";\nfunction ResetPassword() {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [verificationNumber, setVerificationNumber] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n\n  const resetPassword = async () => {\n    if (verificationNumber !== \"1234\") {\n      alert(\"Error: Invalid verification number.\");\n      return;\n    }\n\n    try {\n      const response = await axios.put(`${BASE_URL}/users/reset-password`, {\n        username,\n        email,\n        newPassword,\n      });\n\n      if (response.data.success) {\n        alert(\"Password reset successfully.\");\n        redirectToLogin();\n      } else {\n        alert(response.data.message || \"Error resetting password.\");\n      }\n    } catch (error) {\n      alert(\"An error occurred while resetting the password.\");\n    }\n  };\n\n  return (\n    <div className=\"reset-container\">\n      <input\n        type=\"text\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n        className=\"reset-input\"\n      />\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        className=\"reset-input\"\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Verification number (1234)\"\n        value={verificationNumber}\n        onChange={(e) => setVerificationNumber(e.target.value)}\n        className=\"reset-input\"\n      />\n      <input\n        type=\"password\"\n        placeholder=\"New Password\"\n        value={newPassword}\n        onChange={(e) => setNewPassword(e.target.value)}\n        className=\"reset-input\"\n      />\n      <a onClick={redirectToLogin} className=\"reset-link\">\n        Go to Login Page\n      </a>\n      <button onClick={resetPassword} className=\"reset-button\">\n        Reset Password\n      </button>\n    </div>\n  );\n}\n\nconst redirectToLogin = () => {\n  // window.location.href = \"http://localhost:3000\";\n};\n\nexport default ResetPassword;\n","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Resources/ResourcePage/ResourcePage.js",["121"],[],"import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../../../Context/AppContext\";\nimport \"./ResourcePage.css\";\nimport AddResource from \"../AddResource/AddResource\";\nimport ResourceTable from \"../ResourceTable/ResourceTable\";\nimport ResourcedetailsUpdate from \"../ResourcedetailsUpdate/ResourcedetailsUpdate\";\nimport { BASE_URL } from \"../../../config/urls\";\n\nconst ResourcePage = () => {\n  const { username: currentUsername } = useContext(AppContext);\n\n  const [resources, setResources] = useState([]);\n  const [editingResource, setEditingResource] = useState(null);\n  const [newResource, setNewResource] = useState({\n    resourceName: \"\",\n    resourceDetails: {\n      resourceCode: \"\",\n      resourceDescription: \"\",\n      resourceCost: \"\",\n    },\n  });\n\n  useEffect(() => {\n    axios\n      .get(`${BASE_URL}/resources`)\n      .then((response) => {\n        setResources(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  const handleAddResource = async () => {\n    try {\n      const resourceResponse = await axios.post(\n        `${BASE_URL}/resources`,\n        newResource\n      );\n      const resourceDetailsResponse = await axios.post(\n        `${BASE_URL}/resource-details`,\n        newResource.resourceDetails\n      );\n\n      await axios.post(\n        `${BASE_URL}/resources/${resourceResponse.data.resourceId}/linkDetails/${resourceDetailsResponse.data.id}`\n      );\n\n      const resourcesResponse = await axios.get(`${BASE_URL}/resources`);\n      setResources(resourcesResponse.data);\n    } catch (error) {\n      console.error(\"Error adding new resource:\", error);\n    }\n  };\n\n  const handleRowClick = (resource) => {\n    setEditingResource({ ...resource });\n  };\n\n  const updateResourceName = (resourceId, newName) => {\n    axios\n      .put(`${BASE_URL}/resources/${resourceId}/name`, {\n        name: newName,\n      })\n      .then(() => {\n        // Update the frontend state if needed\n      })\n      .catch((error) => {\n        console.error(\"Error updating resource name:\", error);\n      });\n  };\n\n  const updateResourceDetails = async (resourceDetailsId, newDetails) => {\n    try {\n      await axios.put(\n        `${BASE_URL}/resource-details/${resourceDetailsId}`,\n        newDetails\n      );\n      // After updating the resource details, fetch the resources again to get the updated list.\n      const resourcesResponse = await axios.get(`${BASE_URL}/resources`);\n      setResources(resourcesResponse.data);\n    } catch (error) {\n      console.error(\"Error updating resource details:\", error);\n    }\n  };\n\n  const confirmUpdates = () => {\n    if (editingResource) {\n      updateResourceName(editingResource.id, editingResource.resourceName);\n      updateResourceDetails(\n        editingResource.resourceDetails.id,\n        editingResource.resourceDetails\n      );\n    }\n  };\n\n  return (\n    <div className=\"resource-container\">\n      <AddResource\n        newResource={newResource}\n        setNewResource={setNewResource}\n        handleAddResource={handleAddResource}\n      />\n      <ResourceTable resources={resources} onRowClick={handleRowClick} />\n      {editingResource && (\n        <ResourcedetailsUpdate\n          editingResource={editingResource}\n          setEditingResource={setEditingResource}\n          confirmUpdates={confirmUpdates}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ResourcePage;\n","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Resources/ResourceTable/ResourceTable.js",[],[],"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Resources/AddResource/AddResource.js",[],[],"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Resources/ResourcedetailsUpdate/ResourcedetailsUpdate.js",[],[],"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Projects/ProjectPage/ProjectPage.js",["122","123"],[],"import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../../../Context/AppContext\";\nimport \"./ProjectPage.css\";\nimport NewProjectForm from \"../NewProjectForm/NewProjectForm\";\nimport ProjectDropdown from \"../ProjectDropdown/ProjectDropdown\";\nimport ResourceList from \"../ResourceList/ResourceList\";\nimport LinkedResourceList from \"../LinkedResourceList/LinkedResourceList\";\nimport { BASE_URL } from \"../../../config/urls\";\n\nconst ProjectPage = () => {\n  const { username } = useContext(AppContext);\n  const [projects, setProjects] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [linkedResourceIds, setLinkedResourceIds] = useState(new Set());\n  const [newProjectName, setNewProjectName] = useState(\"\");\n\n  const fetchProjectById = (projectId) => {\n    axios\n      .get(`${BASE_URL}/projects/${projectId}`)\n      .then((response) => {\n        const updatedProject = response.data;\n        setSelectedProject(updatedProject);\n        setLinkedResourceIds(new Set(updatedProject.resourceIds));\n      })\n      .catch((error) => {\n        console.error(`Error fetching project with ID ${projectId}:`, error);\n      });\n  };\n\n  const handleProjectSelection = (project) => {\n    setSelectedProject(project);\n    if (project && project.projectId) {\n      fetchProjectById(project.projectId);\n    }\n  };\n\n  const fetchProjects = () => {\n    axios\n      .get(`${BASE_URL}/projects`)\n      .then((response) => {\n        setProjects(response.data.filter((p) => p.userName === username));\n      })\n      .catch((error) => {\n        console.error(\"Error fetching projects:\", error);\n      });\n  };\n\n  useEffect(() => {\n    fetchProjects();\n    axios\n      .get(`${BASE_URL}/resources`)\n      .then((response) => {\n        setResources(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching resources:\", error);\n      });\n  }, []);\n\n  const linkResourceToProject = (resourceId) => {\n    if (selectedProject) {\n      axios\n        .post(\n          `${BASE_URL}/resources/${resourceId}/linkToProject/${selectedProject.projectId}`\n        )\n        .then(() => {\n          fetchProjectById(selectedProject.projectId);\n        })\n        .catch((error) => {\n          console.error(\"Error linking resource to project:\", error);\n        });\n    }\n  };\n\n  const unlinkResourceFromProject = (resourceId) => {\n    if (selectedProject) {\n      axios\n        .delete(\n          `${BASE_URL}/resources/${resourceId}/unlinkFromProject/${selectedProject.projectId}`\n        )\n        .then(() => {\n          fetchProjectById(selectedProject.projectId);\n        })\n        .catch((error) => {\n          console.error(\"Error unlinking resource from project:\", error);\n        });\n    }\n  };\n\n  const handleCreateProject = () => {\n    axios\n      .post(`${BASE_URL}/projects/${username}/${newProjectName}`)\n      .then((response) => {\n        fetchProjects();\n        setNewProjectName(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error creating new project:\", error);\n      });\n  };\n\n  return (\n    <div className=\"project-container\">\n      <NewProjectForm onNewProject={fetchProjects} />\n      <ProjectDropdown\n        projects={projects}\n        onSelect={handleProjectSelection}\n        selectedProject={selectedProject}\n      />\n      <div className=\"content-wrapper\">\n        <ResourceList\n          resources={resources}\n          linkedResourceIds={linkedResourceIds}\n          onLink={linkResourceToProject}\n        />\n        <LinkedResourceList\n          resources={resources}\n          linkedResourceIds={linkedResourceIds}\n          onUnlink={unlinkResourceFromProject}\n          selectedProject={selectedProject}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectPage;\n","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Projects/NewProjectForm/NewProjectForm.js",[],[],"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Projects/ResourceList/ResourceList.js",[],[],"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Projects/ProjectDropdown/ProjectDropdown.js",[],[],"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Bars/Navbar/Navbar.js",["124","125","126"],[],"import React, { useState, useContext } from \"react\";\nimport { AppContext } from \"../../Context/AppContext\";\nimport App from \"../../App\";\nimport \"./Navbar.css\";\n\nfunction Navbar() {\n  const { isLoggedIn, setIsLoggedIn, username, memberSince, setPage } =\n    useContext(AppContext);\n\n  const [showLogout, setShowLogout] = useState(false);\n\n  const handleLogoutClick = () => {\n    setIsLoggedIn(false);\n    setShowLogout(false);\n    setPage(\"Login\");\n    AppContext.page = \"Login\";\n    AppContext.isLoggedIn = false;\n\n    // Redirect to localhost:3000\n    // window.location.href = \"http://localhost:3000\";\n  };\n\n  const formatDate = (dateString) => {\n    const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  return (\n    <nav>\n      <div className=\"navbar-content\">\n        <h2>Resource Management</h2>\n        {isLoggedIn && (\n          <div\n            className=\"user-section\"\n            onClick={() => setShowLogout(!showLogout)}\n          >\n            <i>{AppContext.username}</i>\n            {showLogout && (\n              <div className=\"popout\">\n                <p>Username: {AppContext.username}</p>\n                <p>Email {AppContext.user.email}</p>\n                <p>Joined: {formatDate(AppContext.user.createDate)} </p>\n                <button onClick={handleLogoutClick}>Log Out</button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Bars/SidebarToggler/SidebarToggler.js",[],[],"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Bars/Sidebar/Sidebar.js",[],[],"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Projects/LinkedResourceList/LinkedResourceList.js",[],[],"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Formulas/Formula.js",["127"],[],"import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../../Context/AppContext\";\nimport \"./Formula.css\";\nimport { BASE_URL } from \"../../config/urls\";\n\nfunction Formula() {\n  const { username: currentUsername } = useContext(AppContext);\n  const [data, setData] = useState([]);\n\n  const [newFormula, setNewFormula] = useState({\n    formulaName: \"\",\n    formulaCostCode: \"\",\n    edited: false,\n    id: \"\",\n  });\n\n  const [editingFormula, setEditingFormula] = useState(null);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = () => {\n    axios\n      .get(`${BASE_URL}/formulas`)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching formula data:\", error);\n      });\n  };\n\n  const handleAddFormula = () => {\n    axios\n      .post(`${BASE_URL}/formulas`, newFormula)\n      .then((response) => {\n        fetchData();\n        setNewFormula({\n          formulaName: \"\",\n          formulaCostCode: \"\",\n          edited: false,\n          id: \"\",\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error adding new formula:\", error);\n      });\n  };\n\n  const handleEditFormula = () => {\n    if (editingFormula) {\n      axios\n        .put(`${BASE_URL}/formulas/${editingFormula.id}`, editingFormula)\n        .then(() => {\n          fetchData();\n          setEditingFormula(null);\n        })\n        .catch((error) => {\n          console.error(\"Error editing formula:\", error);\n        });\n    }\n  };\n\n  const handleRowClick = (formula) => {\n    setEditingFormula({ ...formula });\n  };\n\n  return (\n    <div className=\"formula-page\">\n      {/* Add Formula Section */}\n      <div className=\"add-formula-section\">\n        <h3>Add Formula</h3>\n        <input\n          placeholder=\"Formula Name\"\n          value={newFormula.formulaName}\n          onChange={(e) =>\n            setNewFormula({ ...newFormula, formulaName: e.target.value })\n          }\n        />\n        <input\n          placeholder=\"Cost Code\"\n          value={newFormula.formulaCostCode}\n          onChange={(e) =>\n            setNewFormula({ ...newFormula, formulaCostCode: e.target.value })\n          }\n        />\n        <button onClick={handleAddFormula}>Add Formula</button>\n      </div>\n\n      {/* Edit Formula Section */}\n      {editingFormula && (\n        <div className=\"edit-formula-section\">\n          <h3>Edit Formula</h3>\n          <input\n            placeholder=\"Formula Name\"\n            value={editingFormula.formulaName}\n            onChange={(e) =>\n              setEditingFormula({\n                ...editingFormula,\n                formulaName: e.target.value,\n              })\n            }\n          />\n          <input\n            placeholder=\"Cost Code\"\n            value={editingFormula.formulaCostCode}\n            onChange={(e) =>\n              setEditingFormula({\n                ...editingFormula,\n                formulaCostCode: e.target.value,\n              })\n            }\n          />\n          <button onClick={handleEditFormula}>Confirm Edit</button>\n          <button onClick={() => setEditingFormula(null)}>Cancel</button>\n        </div>\n      )}\n\n      {/* Formula Table */}\n      <table>\n        <thead>\n          <tr>\n            <th>NAME</th>\n            <th>COST_CODE</th>\n            <th>EDITABLE</th>\n            <th>ITEM_ID</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((item) => (\n            <tr key={item.id} onClick={() => handleRowClick(item)}>\n              <td>{item.formulaName}</td>\n              <td>{item.formulaCostCode}</td>\n              <td>{item.edited ? \"Yes\" : \"No\"}</td>\n              <td>{item.id}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Formula;\n","/Users/shuohe/Desktop/ResourceManagementProject/ui/src/config/urls.js",[],[],{"ruleId":"128","severity":1,"message":"129","line":20,"column":16,"nodeType":"130","messageId":"131","endLine":20,"endColumn":23},{"ruleId":"128","severity":1,"message":"132","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":11},{"ruleId":"133","severity":1,"message":"134","line":70,"column":9,"nodeType":"135","endLine":70,"endColumn":62},{"ruleId":"133","severity":1,"message":"134","line":77,"column":9,"nodeType":"135","endLine":77,"endColumn":61},{"ruleId":"133","severity":1,"message":"134","line":96,"column":9,"nodeType":"135","endLine":96,"endColumn":71},{"ruleId":"133","severity":1,"message":"136","line":65,"column":7,"nodeType":"135","endLine":65,"endColumn":59},{"ruleId":"128","severity":1,"message":"137","line":11,"column":21,"nodeType":"130","messageId":"131","endLine":11,"endColumn":36},{"ruleId":"138","severity":1,"message":"139","line":60,"column":6,"nodeType":"140","endLine":60,"endColumn":8,"suggestions":"141"},{"ruleId":"128","severity":1,"message":"142","line":92,"column":9,"nodeType":"130","messageId":"131","endLine":92,"endColumn":28},{"ruleId":"128","severity":1,"message":"132","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":11},{"ruleId":"128","severity":1,"message":"143","line":7,"column":38,"nodeType":"130","messageId":"131","endLine":7,"endColumn":46},{"ruleId":"128","severity":1,"message":"144","line":7,"column":48,"nodeType":"130","messageId":"131","endLine":7,"endColumn":59},{"ruleId":"128","severity":1,"message":"137","line":8,"column":21,"nodeType":"130","messageId":"131","endLine":8,"endColumn":36},"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","'App' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'currentUsername' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProjects'. Either include it or remove the dependency array.","ArrayExpression",["145"],"'handleCreateProject' is assigned a value but never used.","'username' is assigned a value but never used.","'memberSince' is assigned a value but never used.",{"desc":"146","fix":"147"},"Update the dependencies array to be: [fetchProjects]",{"range":"148","text":"149"},[2001,2003],"[fetchProjects]"]
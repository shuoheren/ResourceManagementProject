{"ast":null,"code":"var _jsxFileName = \"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Project/ProjectPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../../Context/AppContext\";\nimport \"./ProjectPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectPage = () => {\n  _s();\n  const {\n    username: currentUsername\n  } = useContext(AppContext);\n  const [projects, setProjects] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [linkedResourceIds, setLinkedResourceIds] = useState(new Set()); // New state for Set of linked resources\n  const [newProjectName, setNewProjectName] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"http://localhost:8085/projects\").then(response => {\n      setProjects(response.data.filter(p => p.userName === currentUsername));\n    }).catch(error => {\n      console.error(\"Error fetching projects:\", error);\n    });\n    axios.get(\"http://localhost:8085/resources\").then(response => {\n      setResources(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching resources:\", error);\n    });\n  }, []);\n  useEffect(() => {\n    // Whenever the selected project changes, update the Set of linked resources\n    if (selectedProject && selectedProject.resourceIds) {\n      setLinkedResourceIds(new Set(selectedProject.resourceIds));\n    } else {\n      setLinkedResourceIds(new Set());\n    }\n  }, [selectedProject]);\n  const handleProjectSelection = project => {\n    setSelectedProject(project);\n  };\n  const linkResourceToProject = resourceId => {\n    if (selectedProject) {\n      axios.post(`http://localhost:8085/resources/${resourceId}/linkToProject/${selectedProject.projectId}`).then(() => {\n        setLinkedResourceIds(prevSet => {\n          prevSet.add(resourceId);\n          return new Set(prevSet);\n        });\n      }).catch(error => {\n        console.error(\"Error linking resource to project:\", error);\n      });\n    }\n  };\n  const unlinkResourceFromProject = resourceId => {\n    if (selectedProject) {\n      axios.delete(`http://localhost:8085/resources/${resourceId}/unlinkFromProject/${selectedProject.projectId}`).then(() => {\n        setLinkedResourceIds(prevSet => {\n          prevSet.delete(resourceId);\n          return new Set(prevSet);\n        });\n      }).catch(error => {\n        console.error(\"Error unlinking resource from project:\", error);\n      });\n    }\n  };\n  const handleCreateProject = () => {\n    axios.post(`http://localhost:8085/projects/${currentUsername}/${newProjectName}`).then(response => {\n      setProjects(prevProjects => [...prevProjects, response.data]);\n      setNewProjectName(\"\");\n    }).catch(error => {\n      console.error(\"Error creating new project:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectPage, \"h+dpIWjAQb9DDAvAI+arhc1hVsQ=\");\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AppContext","jsxDEV","_jsxDEV","ProjectPage","_s","username","currentUsername","projects","setProjects","resources","setResources","selectedProject","setSelectedProject","linkedResourceIds","setLinkedResourceIds","Set","newProjectName","setNewProjectName","get","then","response","data","filter","p","userName","catch","error","console","resourceIds","handleProjectSelection","project","linkResourceToProject","resourceId","post","projectId","prevSet","add","unlinkResourceFromProject","delete","handleCreateProject","prevProjects","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Project/ProjectPage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../../Context/AppContext\";\nimport \"./ProjectPage.css\";\n\nconst ProjectPage = () => {\n  const { username: currentUsername } = useContext(AppContext);\n  const [projects, setProjects] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [linkedResourceIds, setLinkedResourceIds] = useState(new Set()); // New state for Set of linked resources\n  const [newProjectName, setNewProjectName] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8085/projects\")\n      .then((response) => {\n        setProjects(\n          response.data.filter((p) => p.userName === currentUsername)\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error fetching projects:\", error);\n      });\n\n    axios\n      .get(\"http://localhost:8085/resources\")\n      .then((response) => {\n        setResources(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching resources:\", error);\n      });\n  }, []);\n\n  useEffect(() => {\n    // Whenever the selected project changes, update the Set of linked resources\n    if (selectedProject && selectedProject.resourceIds) {\n      setLinkedResourceIds(new Set(selectedProject.resourceIds));\n    } else {\n      setLinkedResourceIds(new Set());\n    }\n  }, [selectedProject]);\n\n  const handleProjectSelection = (project) => {\n    setSelectedProject(project);\n  };\n\n  const linkResourceToProject = (resourceId) => {\n    if (selectedProject) {\n      axios\n        .post(\n          `http://localhost:8085/resources/${resourceId}/linkToProject/${selectedProject.projectId}`\n        )\n        .then(() => {\n          setLinkedResourceIds((prevSet) => {\n            prevSet.add(resourceId);\n            return new Set(prevSet);\n          });\n        })\n        .catch((error) => {\n          console.error(\"Error linking resource to project:\", error);\n        });\n    }\n  };\n\n  const unlinkResourceFromProject = (resourceId) => {\n    if (selectedProject) {\n      axios\n        .delete(\n          `http://localhost:8085/resources/${resourceId}/unlinkFromProject/${selectedProject.projectId}`\n        )\n        .then(() => {\n          setLinkedResourceIds((prevSet) => {\n            prevSet.delete(resourceId);\n            return new Set(prevSet);\n          });\n        })\n        .catch((error) => {\n          console.error(\"Error unlinking resource from project:\", error);\n        });\n    }\n  };\n\n  const handleCreateProject = () => {\n    axios\n      .post(\n        `http://localhost:8085/projects/${currentUsername}/${newProjectName}`\n      )\n      .then((response) => {\n        setProjects((prevProjects) => [...prevProjects, response.data]);\n        setNewProjectName(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error creating new project:\", error);\n      });\n  };\n\n  return (\n    <div className=\"project-container\">\n      {/* ... [Rest of your rendering code, unchanged] */}\n    </div>\n  );\n};\n\nexport default ProjectPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
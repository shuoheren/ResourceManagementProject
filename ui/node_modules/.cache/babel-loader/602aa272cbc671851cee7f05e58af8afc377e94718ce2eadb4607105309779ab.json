{"ast":null,"code":"var _jsxFileName = \"/Users/shuohe/Desktop/final_project/resource-management-system/ui/upr-management/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setLoginStatus } from \"./Redux/Actions/appActions\"; // Path might vary based on your project structure\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport SidebarToggler from \"./Components/SidebarToggler/SidebarToggler\";\nimport Sidebar from \"./Components/Sidebar/Sidebar\";\nimport Login from \"./Pages/Login/Login\";\nimport RegistrationPage from \"./Pages/RegistrationPage/RegistrationPage\";\nimport ResourcePage from \"./Pages/ResourcePage/ResourcePage\";\nimport Project from \"./Pages/Project/Project\";\nimport Formula from \"./Pages/Formula/Formula\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const [isSidebarExtended, setIsSidebarExtended] = useState(false);\n\n  // Use the Redux state instead of the local state\n  const isLoggedIn = props.isLoggedIn;\n\n  // State for current page view (login or registration)\n  const [page, setPage] = useState(\"login\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pYTjlSnUQ5XPHhV90zDzIPpd9Kk=\");\n_c = App;\nconst mapStateToProps = state => ({\n  isLoggedIn: state.isLoggedIn\n});\nexport default connect(mapStateToProps, {\n  setLoginStatus\n})(App);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","connect","setLoginStatus","Navbar","SidebarToggler","Sidebar","Login","RegistrationPage","ResourcePage","Project","Formula","jsxDEV","_jsxDEV","App","props","_s","isSidebarExtended","setIsSidebarExtended","isLoggedIn","page","setPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","state","$RefreshReg$"],"sources":["/Users/shuohe/Desktop/final_project/resource-management-system/ui/upr-management/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setLoginStatus } from \"./Redux/Actions/appActions\"; // Path might vary based on your project structure\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport SidebarToggler from \"./Components/SidebarToggler/SidebarToggler\";\nimport Sidebar from \"./Components/Sidebar/Sidebar\";\nimport Login from \"./Pages/Login/Login\";\nimport RegistrationPage from \"./Pages/RegistrationPage/RegistrationPage\";\nimport ResourcePage from \"./Pages/ResourcePage/ResourcePage\";\nimport Project from \"./Pages/Project/Project\";\nimport Formula from \"./Pages/Formula/Formula\";\nimport \"./App.css\";\n\nfunction App(props) {\n  const [isSidebarExtended, setIsSidebarExtended] = useState(false);\n\n  // Use the Redux state instead of the local state\n  const isLoggedIn = props.isLoggedIn;\n\n  // State for current page view (login or registration)\n  const [page, setPage] = useState(\"login\");\n\n  return (\n    <div>\n      {/* <Navbar />\n      <div className=\"container\">\n        {!isLoggedIn && (\n          <div>\n            {page === \"login\" && <Login setPage={setPage} />}\n            {page === \"registration\" && <RegistrationPage setPage={setPage} />}\n          </div>\n        )}\n        {isLoggedIn && (\n          <div className=\"sidebar-container\">\n            {isSidebarExtended && <Sidebar setPage={setPage} />}\n            <SidebarToggler\n              isExtended={isSidebarExtended}\n              toggle={() => setIsSidebarExtended(!isSidebarExtended)}\n            />\n          </div>\n        )}\n        <div className=\"main-content\">\n          {isLoggedIn && page === \"Resource\" && <ResourcePage />}\n          {isLoggedIn && page === \"Project\" && <Project />}\n          {isLoggedIn && page === \"Formula\" && <Formula />}\n        </div>\n      </div> */}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  isLoggedIn: state.isLoggedIn,\n});\n\nexport default connect(mapStateToProps, { setLoginStatus })(App);\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,cAAc,QAAQ,4BAA4B,CAAC,CAAC;AAC7D,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,cAAc,MAAM,4CAA4C;AACvE,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,gBAAgB,MAAM,2CAA2C;AACxE,OAAOC,YAAY,MAAM,mCAAmC;AAC5D,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;;EAEjE;EACA,MAAMkB,UAAU,GAAGJ,KAAK,CAACI,UAAU;;EAEnC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,OAAO,CAAC;EAEzC,oBACEY,OAAA;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAwBK,CAAC;AAEV;AAACT,EAAA,CApCQF,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAsCZ,MAAMa,eAAe,GAAIC,KAAK,KAAM;EAClCT,UAAU,EAAES,KAAK,CAACT;AACpB,CAAC,CAAC;AAEF,eAAejB,OAAO,CAACyB,eAAe,EAAE;EAAExB;AAAe,CAAC,CAAC,CAACW,GAAG,CAAC;AAAC,IAAAY,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
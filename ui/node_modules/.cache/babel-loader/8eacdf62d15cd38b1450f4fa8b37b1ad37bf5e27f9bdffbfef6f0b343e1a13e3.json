{"ast":null,"code":"var _jsxFileName = \"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Project/ProjectPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../../Context/AppContext\"; // import the context\nimport \"./ProjectPage.css\";\nimport App from \"../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectPage = () => {\n  _s();\n  console.log(AppContext.username);\n  const {\n    username: currentUsername\n  } = useContext(AppContext); // get the username from the context\n  const [projects, setProjects] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [selectedResources, setSelectedResources] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8085/projects\").then(response => {\n      setProjects(response.data.filter(p => p.userName == AppContext.username));\n    }).catch(error => {\n      console.error(\"Error fetching projects:\", error);\n    });\n    axios.get(\"http://localhost:8085/resources\").then(response => {\n      setResources(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching resources:\", error);\n    });\n  }, []);\n  const handleProjectSelection = project => {\n    setSelectedProject(project);\n    if (project && project.linkedResources) {\n      setSelectedResources(project.linkedResources);\n    } else {\n      setSelectedResources([]);\n    }\n  };\n  const linkResourceToProject = resourceId => {\n    if (selectedProject) {\n      axios.post(`http://localhost:8085/resources/${resourceId}/linkToProject/${selectedProject.projectId}`).then(() => {\n        setSelectedResources(prevResources => [...prevResources, resourceId]);\n      }).catch(error => {\n        console.error(\"Error linking resource to project:\", error);\n      });\n    }\n  };\n  const unlinkResourceFromProject = resourceId => {\n    if (selectedProject) {\n      axios.delete(`http://localhost:8085/resources/${resourceId}/unlinkFromProject/${selectedProject.projectId}`).then(() => {\n        setSelectedResources(prevResources => prevResources.filter(id => id !== resourceId));\n      }).catch(error => {\n        console.error(\"Error unlinking resource from project:\", error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-dropdown\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.projectId) || \"\",\n        onChange: e => {\n          const chosenProject = projects.find(p => p.projectId === parseInt(e.target.value, 10));\n          handleProjectSelection(chosenProject);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: project.projectId,\n          children: project.projectName\n        }, project.projectId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resources-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Unlinked Resources\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), resources.map(resource => !selectedResources.includes(resource.resourceId) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: resource.resourceName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => linkResourceToProject(resource.resourceId),\n            children: \"Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this)]\n        }, resource.resourceId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-resources-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Linked Resources for Project:\", \" \", (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.projectName) || \"None\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), selectedResources.map(resourceId => {\n          const resource = resources.find(r => r.resourceId === resourceId);\n          return resource ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: resource.resourceName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => unlinkResourceFromProject(resourceId),\n              children: \"Unlink\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, resourceId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this) : null;\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectPage, \"iCa7x10kgAD8kNuNf+oFKrs3yMk=\");\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AppContext","App","jsxDEV","_jsxDEV","ProjectPage","_s","console","log","username","currentUsername","projects","setProjects","resources","setResources","selectedProject","setSelectedProject","selectedResources","setSelectedResources","get","then","response","data","filter","p","userName","catch","error","handleProjectSelection","project","linkedResources","linkResourceToProject","resourceId","post","projectId","prevResources","unlinkResourceFromProject","delete","id","className","children","value","onChange","e","chosenProject","find","parseInt","target","fileName","_jsxFileName","lineNumber","columnNumber","map","projectName","resource","includes","resourceName","onClick","r","_c","$RefreshReg$"],"sources":["/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Project/ProjectPage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../../Context/AppContext\"; // import the context\nimport \"./ProjectPage.css\";\nimport App from \"../../App\";\n\nconst ProjectPage = () => {\n  console.log(AppContext.username);\n  const { username: currentUsername } = useContext(AppContext); // get the username from the context\n  const [projects, setProjects] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [selectedResources, setSelectedResources] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8085/projects\")\n      .then((response) => {\n        setProjects(\n          response.data.filter((p) => p.userName == AppContext.username)\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error fetching projects:\", error);\n      });\n\n    axios\n      .get(\"http://localhost:8085/resources\")\n      .then((response) => {\n        setResources(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching resources:\", error);\n      });\n  }, []);\n\n  const handleProjectSelection = (project) => {\n    setSelectedProject(project);\n\n    if (project && project.linkedResources) {\n      setSelectedResources(project.linkedResources);\n    } else {\n      setSelectedResources([]);\n    }\n  };\n\n  const linkResourceToProject = (resourceId) => {\n    if (selectedProject) {\n      axios\n        .post(\n          `http://localhost:8085/resources/${resourceId}/linkToProject/${selectedProject.projectId}`\n        )\n        .then(() => {\n          setSelectedResources((prevResources) => [\n            ...prevResources,\n            resourceId,\n          ]);\n        })\n        .catch((error) => {\n          console.error(\"Error linking resource to project:\", error);\n        });\n    }\n  };\n\n  const unlinkResourceFromProject = (resourceId) => {\n    if (selectedProject) {\n      axios\n        .delete(\n          `http://localhost:8085/resources/${resourceId}/unlinkFromProject/${selectedProject.projectId}`\n        )\n        .then(() => {\n          setSelectedResources((prevResources) =>\n            prevResources.filter((id) => id !== resourceId)\n          );\n        })\n        .catch((error) => {\n          console.error(\"Error unlinking resource from project:\", error);\n        });\n    }\n  };\n  return (\n    <div className=\"project-container\">\n      {/* Project Selection Dropdown */}\n      <div className=\"project-dropdown\">\n        <select\n          value={selectedProject?.projectId || \"\"}\n          onChange={(e) => {\n            const chosenProject = projects.find(\n              (p) => p.projectId === parseInt(e.target.value, 10)\n            );\n            handleProjectSelection(chosenProject);\n          }}\n        >\n          <option value=\"\">Select a Project</option>\n          {projects.map((project) => (\n            <option key={project.projectId} value={project.projectId}>\n              {project.projectName}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"content-wrapper\">\n        <div className=\"resources-list\">\n          <h3>Unlinked Resources</h3>\n          {resources.map(\n            (resource) =>\n              !selectedResources.includes(resource.resourceId) && (\n                <div key={resource.resourceId}>\n                  <span>{resource.resourceName}</span>\n                  <button\n                    onClick={() => linkResourceToProject(resource.resourceId)}\n                  >\n                    Link\n                  </button>\n                </div>\n              )\n          )}\n        </div>\n\n        <div className=\"selected-resources-list\">\n          <h3>\n            Linked Resources for Project:{\" \"}\n            {selectedProject?.projectName || \"None\"}\n          </h3>\n          {selectedResources.map((resourceId) => {\n            const resource = resources.find((r) => r.resourceId === resourceId);\n            return resource ? (\n              <div key={resourceId}>\n                <span>{resource.resourceName}</span>\n                <button onClick={() => unlinkResourceFromProject(resourceId)}>\n                  Unlink\n                </button>\n              </div>\n            ) : null;\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default ProjectPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
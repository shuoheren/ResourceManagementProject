{"ast":null,"code":"var _jsxFileName = \"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Projects/ProjectPage/ProjectPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../../../Context/AppContext\";\nimport \"./ProjectPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectPage = () => {\n  _s();\n  const {\n    username\n  } = useContext(AppContext);\n  const [projects, setProjects] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [linkedResourceIds, setLinkedResourceIds] = useState(new Set());\n  const [newProjectName, setNewProjectName] = useState(\"\");\n  const [currentPageLinked, setCurrentPageLinked] = useState(1);\n  const [currentPageUnlinked, setCurrentPageUnlinked] = useState(1);\n  const itemsPerPage = 10;\n  const fetchProjectById = projectId => {\n    axios.get(`http://localhost:8085/projects/${projectId}`).then(response => {\n      const updatedProject = response.data;\n      setSelectedProject(updatedProject);\n      setLinkedResourceIds(new Set(updatedProject.resourceIds));\n    }).catch(error => {\n      console.error(`Error fetching project with ID ${projectId}:`, error);\n    });\n  };\n  const handleProjectSelection = project => {\n    setSelectedProject(project);\n    if (project && project.projectId) {\n      fetchProjectById(project.projectId);\n    }\n  };\n  useEffect(() => {\n    if (selectedProject && selectedProject.resourceIds) {\n      setLinkedResourceIds(new Set(selectedProject.resourceIds));\n    } else {\n      setLinkedResourceIds(new Set());\n    }\n  }, [selectedProject]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8085/projects\").then(response => {\n      setProjects(response.data.filter(p => p.userName === AppContext.username));\n    }).catch(error => {\n      console.error(\"Error fetching projects:\", error);\n    });\n    axios.get(\"http://localhost:8085/resources\").then(response => {\n      setResources(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching resources:\", error);\n    });\n  }, []);\n  const updateProjectsList = () => {\n    axios.get(\"http://localhost:8085/projects\").then(response => {\n      setProjects(response.data.filter(p => p.userName === AppContext.username));\n    }).catch(error => {\n      console.error(\"Error fetching projects:\", error);\n    });\n  };\n  const linkResourceToProject = resourceId => {\n    if (selectedProject) {\n      axios.post(`http://localhost:8085/resources/${resourceId}/linkToProject/${selectedProject.projectId}`).then(() => {\n        fetchProjectById(selectedProject.projectId);\n        updateProjectsList();\n      }).catch(error => {\n        console.error(\"Error linking resource to project:\", error);\n      });\n    }\n  };\n  const unlinkResourceFromProject = resourceId => {\n    if (selectedProject) {\n      axios.delete(`http://localhost:8085/resources/${resourceId}/unlinkFromProject/${selectedProject.projectId}`).then(() => {\n        fetchProjectById(selectedProject.projectId);\n        updateProjectsList();\n      }).catch(error => {\n        console.error(\"Error unlinking resource from project:\", error);\n      });\n    }\n  };\n  const handleCreateProject = () => {\n    axios.post(`http://localhost:8085/projects/${AppContext.username}/${newProjectName}`).then(response => {\n      setProjects(prevProjects => [...prevProjects, response.data]);\n      setNewProjectName(\"\");\n    }).catch(error => {\n      console.error(\"Error creating new project:\", error);\n    });\n  };\n  const paginate = (data, currentPage, itemsPerPage) => {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    return data.slice(startIndex, startIndex + itemsPerPage);\n  };\n  const paginatedUnlinkedResources = paginate(resources.filter(resource => !linkedResourceIds.has(resource.resourceId)), currentPageUnlinked, itemsPerPage);\n  const paginatedLinkedResourceIds = paginate(Array.from(linkedResourceIds), currentPageLinked, itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-project-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"New Project Name\",\n        value: newProjectName,\n        onChange: e => setNewProjectName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateProject,\n        children: \"Create Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-dropdown\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.projectId) || \"\",\n        onChange: e => {\n          const chosenProject = projects.find(p => p.projectId === parseInt(e.target.value, 10));\n          handleProjectSelection(chosenProject);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: project.projectId,\n          children: project.projectName\n        }, project.projectId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resources-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Unlinked Resources\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), paginatedUnlinkedResources.map(resource => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: resource.resourceName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"link-unlink-button\",\n            onClick: () => linkResourceToProject(resource.resourceId),\n            children: \"Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, resource.resourceId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: currentPageUnlinked === 1,\n            onClick: () => setCurrentPageUnlinked(prev => prev - 1),\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: paginatedUnlinkedResources.length < itemsPerPage,\n            onClick: () => setCurrentPageUnlinked(prev => prev + 1),\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-resources-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Linked Resources for Project:\", (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.projectName) || \"None\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), paginatedLinkedResourceIds.map(resourceId => {\n          const resource = resources.find(r => r.resourceId === resourceId);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: resource.resourceName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"link-unlink-button\",\n              onClick: () => unlinkResourceFromProject(resourceId),\n              children: \"Unlink\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)]\n          }, resourceId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: currentPageLinked === 1,\n            onClick: () => setCurrentPageLinked(prev => prev - 1),\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: paginatedLinkedResourceIds.length < itemsPerPage,\n            onClick: () => setCurrentPageLinked(prev => prev + 1),\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectPage, \"ZUkORxpLCpOYOXL8PpyyQEezK70=\");\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AppContext","jsxDEV","_jsxDEV","ProjectPage","_s","username","projects","setProjects","resources","setResources","selectedProject","setSelectedProject","linkedResourceIds","setLinkedResourceIds","Set","newProjectName","setNewProjectName","currentPageLinked","setCurrentPageLinked","currentPageUnlinked","setCurrentPageUnlinked","itemsPerPage","fetchProjectById","projectId","get","then","response","updatedProject","data","resourceIds","catch","error","console","handleProjectSelection","project","filter","p","userName","updateProjectsList","linkResourceToProject","resourceId","post","unlinkResourceFromProject","delete","handleCreateProject","prevProjects","paginate","currentPage","startIndex","slice","paginatedUnlinkedResources","resource","has","paginatedLinkedResourceIds","Array","from","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","chosenProject","find","parseInt","map","projectName","resourceName","disabled","prev","length","r","_c","$RefreshReg$"],"sources":["/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Projects/ProjectPage/ProjectPage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../../../Context/AppContext\";\nimport \"./ProjectPage.css\";\n\nconst ProjectPage = () => {\n  const { username } = useContext(AppContext);\n  const [projects, setProjects] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [linkedResourceIds, setLinkedResourceIds] = useState(new Set());\n  const [newProjectName, setNewProjectName] = useState(\"\");\n  const [currentPageLinked, setCurrentPageLinked] = useState(1);\n  const [currentPageUnlinked, setCurrentPageUnlinked] = useState(1);\n  const itemsPerPage = 10;\n\n  const fetchProjectById = (projectId) => {\n    axios\n      .get(`http://localhost:8085/projects/${projectId}`)\n      .then((response) => {\n        const updatedProject = response.data;\n        setSelectedProject(updatedProject);\n        setLinkedResourceIds(new Set(updatedProject.resourceIds));\n      })\n      .catch((error) => {\n        console.error(`Error fetching project with ID ${projectId}:`, error);\n      });\n  };\n\n  const handleProjectSelection = (project) => {\n    setSelectedProject(project);\n    if (project && project.projectId) {\n      fetchProjectById(project.projectId);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedProject && selectedProject.resourceIds) {\n      setLinkedResourceIds(new Set(selectedProject.resourceIds));\n    } else {\n      setLinkedResourceIds(new Set());\n    }\n  }, [selectedProject]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8085/projects\")\n      .then((response) => {\n        setProjects(\n          response.data.filter((p) => p.userName === AppContext.username)\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error fetching projects:\", error);\n      });\n\n    axios\n      .get(\"http://localhost:8085/resources\")\n      .then((response) => {\n        setResources(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching resources:\", error);\n      });\n  }, []);\n\n  const updateProjectsList = () => {\n    axios\n      .get(\"http://localhost:8085/projects\")\n      .then((response) => {\n        setProjects(\n          response.data.filter((p) => p.userName === AppContext.username)\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error fetching projects:\", error);\n      });\n  };\n\n  const linkResourceToProject = (resourceId) => {\n    if (selectedProject) {\n      axios\n        .post(\n          `http://localhost:8085/resources/${resourceId}/linkToProject/${selectedProject.projectId}`\n        )\n        .then(() => {\n          fetchProjectById(selectedProject.projectId);\n          updateProjectsList();\n        })\n        .catch((error) => {\n          console.error(\"Error linking resource to project:\", error);\n        });\n    }\n  };\n\n  const unlinkResourceFromProject = (resourceId) => {\n    if (selectedProject) {\n      axios\n        .delete(\n          `http://localhost:8085/resources/${resourceId}/unlinkFromProject/${selectedProject.projectId}`\n        )\n        .then(() => {\n          fetchProjectById(selectedProject.projectId);\n          updateProjectsList();\n        })\n        .catch((error) => {\n          console.error(\"Error unlinking resource from project:\", error);\n        });\n    }\n  };\n\n  const handleCreateProject = () => {\n    axios\n      .post(\n        `http://localhost:8085/projects/${AppContext.username}/${newProjectName}`\n      )\n      .then((response) => {\n        setProjects((prevProjects) => [...prevProjects, response.data]);\n        setNewProjectName(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error creating new project:\", error);\n      });\n  };\n\n  const paginate = (data, currentPage, itemsPerPage) => {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    return data.slice(startIndex, startIndex + itemsPerPage);\n  };\n\n  const paginatedUnlinkedResources = paginate(\n    resources.filter((resource) => !linkedResourceIds.has(resource.resourceId)),\n    currentPageUnlinked,\n    itemsPerPage\n  );\n\n  const paginatedLinkedResourceIds = paginate(\n    Array.from(linkedResourceIds),\n    currentPageLinked,\n    itemsPerPage\n  );\n\n  return (\n    <div className=\"project-container\">\n      <div className=\"new-project-container\">\n        <input\n          type=\"text\"\n          placeholder=\"New Project Name\"\n          value={newProjectName}\n          onChange={(e) => setNewProjectName(e.target.value)}\n        />\n        <button onClick={handleCreateProject}>Create Project</button>\n      </div>\n\n      <div className=\"project-dropdown\">\n        <select\n          value={selectedProject?.projectId || \"\"}\n          onChange={(e) => {\n            const chosenProject = projects.find(\n              (p) => p.projectId === parseInt(e.target.value, 10)\n            );\n            handleProjectSelection(chosenProject);\n          }}\n        >\n          <option value=\"\">Select a Project</option>\n          {projects.map((project) => (\n            <option key={project.projectId} value={project.projectId}>\n              {project.projectName}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"content-wrapper\">\n        <div className=\"resources-list\">\n          <h3>Unlinked Resources</h3>\n          {paginatedUnlinkedResources.map((resource) => (\n            <div key={resource.resourceId}>\n              <span>{resource.resourceName}</span>\n              <button\n                className=\"link-unlink-button\"\n                onClick={() => linkResourceToProject(resource.resourceId)}\n              >\n                Link\n              </button>\n            </div>\n          ))}\n          <div className=\"pagination\">\n            <button\n              disabled={currentPageUnlinked === 1}\n              onClick={() => setCurrentPageUnlinked((prev) => prev - 1)}\n            >\n              Previous\n            </button>\n            <button\n              disabled={paginatedUnlinkedResources.length < itemsPerPage}\n              onClick={() => setCurrentPageUnlinked((prev) => prev + 1)}\n            >\n              Next\n            </button>\n          </div>\n        </div>\n\n        <div className=\"selected-resources-list\">\n          <h3>\n            Linked Resources for Project:\n            {selectedProject?.projectName || \"None\"}\n          </h3>\n          {paginatedLinkedResourceIds.map((resourceId) => {\n            const resource = resources.find((r) => r.resourceId === resourceId);\n            return (\n              <div key={resourceId}>\n                <span>{resource.resourceName}</span>\n                <button\n                  className=\"link-unlink-button\"\n                  onClick={() => unlinkResourceFromProject(resourceId)}\n                >\n                  Unlink\n                </button>\n              </div>\n            );\n          })}\n          <div className=\"pagination\">\n            <button\n              disabled={currentPageLinked === 1}\n              onClick={() => setCurrentPageLinked((prev) => prev - 1)}\n            >\n              Previous\n            </button>\n            <button\n              disabled={paginatedLinkedResourceIds.length < itemsPerPage}\n              onClick={() => setCurrentPageLinked((prev) => prev + 1)}\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
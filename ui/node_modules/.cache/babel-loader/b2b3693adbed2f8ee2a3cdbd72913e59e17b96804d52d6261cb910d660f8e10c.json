{"ast":null,"code":"var _jsxFileName = \"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Projects/ProjectPage/ProjectPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../../../Context/AppContext\";\nimport \"./ProjectPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectPage = () => {\n  _s();\n  const {\n    username\n  } = useContext(AppContext);\n  const [projects, setProjects] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [linkedResourceIds, setLinkedResourceIds] = useState(new Set());\n  const [newProjectName, setNewProjectName] = useState(\"\");\n\n  // Pagination states\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  const fetchProjectById = async projectId => {\n    try {\n      const response = await axios.get(`http://localhost:8085/projects/${projectId}`);\n      const updatedProject = response.data;\n      setSelectedProject(updatedProject);\n      setLinkedResourceIds(new Set(updatedProject.resourceIds));\n    } catch (error) {\n      console.error(`Error fetching project with ID ${projectId}:`, error);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const projectsResponse = await axios.get(\"http://localhost:8085/projects\");\n        const filteredProjects = projectsResponse.data.filter(p => p.userName === username);\n        setProjects(filteredProjects);\n        const resourcesResponse = await axios.get(\"http://localhost:8085/resources\");\n        setResources(resourcesResponse.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [username]);\n  const currentProjects = projects.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  const totalPages = Math.ceil(projects.length / itemsPerPage);\n  const renderPageNumbers = () => {\n    const pageNumbers = [];\n    for (let i = 1; i <= totalPages; i++) {\n      pageNumbers.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        className: currentPage === i ? \"active-page\" : \"page-number\",\n        onClick: () => setCurrentPage(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this));\n    }\n    return pageNumbers;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-project-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"New Project Name\",\n        value: newProjectName,\n        onChange: e => setNewProjectName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          /* handle project creation here */\n        },\n        children: \"Create Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-dropdown\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.projectId) || \"\",\n        onChange: e => {\n          const projectId = parseInt(e.target.value, 10);\n          const chosenProject = projects.find(p => p.projectId === projectId);\n          fetchProjectById(projectId);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), currentProjects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: project.projectId,\n          children: project.projectName\n        }, project.projectId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resources-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Unlinked Resources\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), resources.map(resource => !linkedResourceIds.has(resource.resourceId) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: resource.resourceName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"link-unlink-button\",\n            onClick: () => {\n              /* handle resource linking here */\n            },\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }, this)]\n        }, resource.resourceId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-resources-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Linked Resources for Project:\", \" \", (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.projectName) || \"None\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), Array.from(linkedResourceIds).map(resourceId => {\n          const resource = resources.find(r => r.resourceId === resourceId);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: resource.resourceName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"link-unlink-button\",\n              onClick: () => {\n                /* handle resource unlinking here */\n              },\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, resourceId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: renderPageNumbers()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectPage, \"fgViVcZYlDbtHsZRlDfLoUIWYgA=\");\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AppContext","jsxDEV","_jsxDEV","ProjectPage","_s","username","projects","setProjects","resources","setResources","selectedProject","setSelectedProject","linkedResourceIds","setLinkedResourceIds","Set","newProjectName","setNewProjectName","currentPage","setCurrentPage","itemsPerPage","fetchProjectById","projectId","response","get","updatedProject","data","resourceIds","error","console","fetchData","projectsResponse","filteredProjects","filter","p","userName","resourcesResponse","currentProjects","slice","totalPages","Math","ceil","length","renderPageNumbers","pageNumbers","i","push","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","parseInt","chosenProject","find","map","project","projectName","resource","has","resourceId","resourceName","Array","from","r","_c","$RefreshReg$"],"sources":["/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Projects/ProjectPage/ProjectPage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../../../Context/AppContext\";\nimport \"./ProjectPage.css\";\n\nconst ProjectPage = () => {\n  const { username } = useContext(AppContext);\n  const [projects, setProjects] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [linkedResourceIds, setLinkedResourceIds] = useState(new Set());\n  const [newProjectName, setNewProjectName] = useState(\"\");\n\n  // Pagination states\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n\n  const fetchProjectById = async (projectId) => {\n    try {\n      const response = await axios.get(\n        `http://localhost:8085/projects/${projectId}`\n      );\n      const updatedProject = response.data;\n      setSelectedProject(updatedProject);\n      setLinkedResourceIds(new Set(updatedProject.resourceIds));\n    } catch (error) {\n      console.error(`Error fetching project with ID ${projectId}:`, error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const projectsResponse = await axios.get(\n          \"http://localhost:8085/projects\"\n        );\n        const filteredProjects = projectsResponse.data.filter(\n          (p) => p.userName === username\n        );\n        setProjects(filteredProjects);\n\n        const resourcesResponse = await axios.get(\n          \"http://localhost:8085/resources\"\n        );\n        setResources(resourcesResponse.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, [username]);\n\n  const currentProjects = projects.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  const totalPages = Math.ceil(projects.length / itemsPerPage);\n\n  const renderPageNumbers = () => {\n    const pageNumbers = [];\n    for (let i = 1; i <= totalPages; i++) {\n      pageNumbers.push(\n        <span\n          key={i}\n          className={currentPage === i ? \"active-page\" : \"page-number\"}\n          onClick={() => setCurrentPage(i)}\n        >\n          {i}\n        </span>\n      );\n    }\n    return pageNumbers;\n  };\n\n  return (\n    <div className=\"project-container\">\n      <div className=\"new-project-container\">\n        <input\n          type=\"text\"\n          placeholder=\"New Project Name\"\n          value={newProjectName}\n          onChange={(e) => setNewProjectName(e.target.value)}\n        />\n        <button\n          onClick={() => {\n            /* handle project creation here */\n          }}\n        >\n          Create Project\n        </button>\n      </div>\n      <div className=\"project-dropdown\">\n        <select\n          value={selectedProject?.projectId || \"\"}\n          onChange={(e) => {\n            const projectId = parseInt(e.target.value, 10);\n            const chosenProject = projects.find(\n              (p) => p.projectId === projectId\n            );\n            fetchProjectById(projectId);\n          }}\n        >\n          <option value=\"\">Select a Project</option>\n          {currentProjects.map((project) => (\n            <option key={project.projectId} value={project.projectId}>\n              {project.projectName}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"content-wrapper\">\n        <div className=\"resources-list\">\n          <h3>Unlinked Resources</h3>\n          {resources.map(\n            (resource) =>\n              !linkedResourceIds.has(resource.resourceId) && (\n                <div key={resource.resourceId}>\n                  <span>{resource.resourceName}</span>\n                  <button\n                    className=\"link-unlink-button\"\n                    onClick={() => {\n                      /* handle resource linking here */\n                    }}\n                  >\n                    +\n                  </button>\n                </div>\n              )\n          )}\n        </div>\n        <div className=\"selected-resources-list\">\n          <h3>\n            Linked Resources for Project:{\" \"}\n            {selectedProject?.projectName || \"None\"}\n          </h3>\n          {Array.from(linkedResourceIds).map((resourceId) => {\n            const resource = resources.find((r) => r.resourceId === resourceId);\n            return (\n              <div key={resourceId}>\n                <span>{resource.resourceName}</span>\n                <button\n                  className=\"link-unlink-button\"\n                  onClick={() => {\n                    /* handle resource unlinking here */\n                  }}\n                >\n                  -\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"pagination\">{renderPageNumbers()}</div>\n    </div>\n  );\n};\n\nexport default ProjectPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
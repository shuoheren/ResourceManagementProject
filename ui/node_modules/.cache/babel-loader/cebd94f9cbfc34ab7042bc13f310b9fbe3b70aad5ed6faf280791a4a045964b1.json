{"ast":null,"code":"var _jsxFileName = \"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Projects/ProjectPage/ProjectPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../../../Context/AppContext\";\nimport \"./ProjectPage.css\";\nimport NewProjectForm from \"../NewProjectForm/NewProjectForm\";\nimport ProjectDropdown from \"../ProjectDropdown/ProjectDropdown\";\nimport ResourceList from \"../ResourceList/ResourceList\";\nimport LinkedResourceList from \"../LinkedResourceList/LinkedResourceList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectPage = () => {\n  _s();\n  const {\n    username\n  } = useContext(AppContext);\n  const [projects, setProjects] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [linkedResourceIds, setLinkedResourceIds] = useState(new Set());\n  const [newProjectName, setNewProjectName] = useState(\"\");\n  const fetchProjectById = projectId => {\n    axios.get(`http://localhost:8085/projects/${projectId}`).then(response => {\n      const updatedProject = response.data;\n      setSelectedProject(updatedProject);\n      setLinkedResourceIds(new Set(updatedProject.resourceIds));\n    }).catch(error => {\n      console.error(`Error fetching project with ID ${projectId}:`, error);\n    });\n  };\n  const handleProjectSelection = project => {\n    setSelectedProject(project);\n    if (project && project.projectId) {\n      fetchProjectById(project.projectId);\n    }\n  };\n  useEffect(() => {\n    if (selectedProject && selectedProject.resourceIds) {\n      setLinkedResourceIds(new Set(selectedProject.resourceIds));\n    } else {\n      setLinkedResourceIds(new Set());\n    }\n  }, [selectedProject]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8085/projects\").then(response => {\n      setProjects(response.data.filter(p => p.userName === AppContext.username));\n    }).catch(error => {\n      console.error(\"Error fetching projects:\", error);\n    });\n    axios.get(\"http://localhost:8085/resources\").then(response => {\n      setResources(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching resources:\", error);\n    });\n  }, []);\n  const updateProjectsList = () => {\n    axios.get(\"http://localhost:8085/projects\").then(response => {\n      setProjects(response.data.filter(p => p.userName === AppContext.username));\n    }).catch(error => {\n      console.error(\"Error fetching projects:\", error);\n    });\n  };\n  const linkResourceToProject = resourceId => {\n    if (selectedProject) {\n      axios.post(`http://localhost:8085/resources/${resourceId}/linkToProject/${selectedProject.projectId}`).then(() => {\n        fetchProjectById(selectedProject.projectId);\n        updateProjectsList();\n      }).catch(error => {\n        console.error(\"Error linking resource to project:\", error);\n      });\n    }\n  };\n  const unlinkResourceFromProject = resourceId => {\n    if (selectedProject) {\n      axios.delete(`http://localhost:8085/resources/${resourceId}/unlinkFromProject/${selectedProject.projectId}`).then(() => {\n        fetchProjectById(selectedProject.projectId);\n        updateProjectsList();\n      }).catch(error => {\n        console.error(\"Error unlinking resource from project:\", error);\n      });\n    }\n  };\n  const handleCreateProject = () => {\n    console.log(AppContext.username);\n    console.log(\"hello\");\n    console.log(newProjectName);\n    console.log(\"hello\");\n    axios.post(`http://localhost:8085/projects/${AppContext.username}/${newProjectName}`).then(response => {\n      setProjects(prevProjects => [...prevProjects, response.data]);\n      setNewProjectName(\"\");\n    }).catch(error => {\n      console.error(\"Error creating new project:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\",\n    children: [/*#__PURE__*/_jsxDEV(NewProjectForm, {\n      onNewProject: fetchProjects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectDropdown, {\n      projects: projects,\n      onSelect: handleProjectSelection,\n      selectedProject: selectedProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(ResourceList, {\n        resources: resources,\n        linkedResourceIds: linkedResourceIds,\n        onLink: linkResourceToProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LinkedResourceList, {\n        resources: resources,\n        linkedResourceIds: linkedResourceIds,\n        onUnlink: unlinkResourceFromProject,\n        selectedProject: selectedProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectPage, \"1oESJEFMqsUWT+1X7eAvOVBeNdI=\");\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AppContext","NewProjectForm","ProjectDropdown","ResourceList","LinkedResourceList","jsxDEV","_jsxDEV","ProjectPage","_s","username","projects","setProjects","resources","setResources","selectedProject","setSelectedProject","linkedResourceIds","setLinkedResourceIds","Set","newProjectName","setNewProjectName","fetchProjectById","projectId","get","then","response","updatedProject","data","resourceIds","catch","error","console","handleProjectSelection","project","filter","p","userName","updateProjectsList","linkResourceToProject","resourceId","post","unlinkResourceFromProject","delete","handleCreateProject","log","prevProjects","className","children","onNewProject","fetchProjects","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","onLink","onUnlink","_c","$RefreshReg$"],"sources":["/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Projects/ProjectPage/ProjectPage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../../../Context/AppContext\";\nimport \"./ProjectPage.css\";\nimport NewProjectForm from \"../NewProjectForm/NewProjectForm\";\nimport ProjectDropdown from \"../ProjectDropdown/ProjectDropdown\";\nimport ResourceList from \"../ResourceList/ResourceList\";\nimport LinkedResourceList from \"../LinkedResourceList/LinkedResourceList\";\n\nconst ProjectPage = () => {\n  const { username } = useContext(AppContext);\n  const [projects, setProjects] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [linkedResourceIds, setLinkedResourceIds] = useState(new Set());\n  const [newProjectName, setNewProjectName] = useState(\"\");\n\n  const fetchProjectById = (projectId) => {\n    axios\n      .get(`http://localhost:8085/projects/${projectId}`)\n      .then((response) => {\n        const updatedProject = response.data;\n        setSelectedProject(updatedProject);\n        setLinkedResourceIds(new Set(updatedProject.resourceIds));\n      })\n      .catch((error) => {\n        console.error(`Error fetching project with ID ${projectId}:`, error);\n      });\n  };\n\n  const handleProjectSelection = (project) => {\n    setSelectedProject(project);\n    if (project && project.projectId) {\n      fetchProjectById(project.projectId);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedProject && selectedProject.resourceIds) {\n      setLinkedResourceIds(new Set(selectedProject.resourceIds));\n    } else {\n      setLinkedResourceIds(new Set());\n    }\n  }, [selectedProject]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8085/projects\")\n      .then((response) => {\n        setProjects(\n          response.data.filter((p) => p.userName === AppContext.username)\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error fetching projects:\", error);\n      });\n\n    axios\n      .get(\"http://localhost:8085/resources\")\n      .then((response) => {\n        setResources(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching resources:\", error);\n      });\n  }, []);\n\n  const updateProjectsList = () => {\n    axios\n      .get(\"http://localhost:8085/projects\")\n      .then((response) => {\n        setProjects(\n          response.data.filter((p) => p.userName === AppContext.username)\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error fetching projects:\", error);\n      });\n  };\n\n  const linkResourceToProject = (resourceId) => {\n    if (selectedProject) {\n      axios\n        .post(\n          `http://localhost:8085/resources/${resourceId}/linkToProject/${selectedProject.projectId}`\n        )\n        .then(() => {\n          fetchProjectById(selectedProject.projectId);\n          updateProjectsList();\n        })\n        .catch((error) => {\n          console.error(\"Error linking resource to project:\", error);\n        });\n    }\n  };\n\n  const unlinkResourceFromProject = (resourceId) => {\n    if (selectedProject) {\n      axios\n        .delete(\n          `http://localhost:8085/resources/${resourceId}/unlinkFromProject/${selectedProject.projectId}`\n        )\n        .then(() => {\n          fetchProjectById(selectedProject.projectId);\n          updateProjectsList();\n        })\n        .catch((error) => {\n          console.error(\"Error unlinking resource from project:\", error);\n        });\n    }\n  };\n\n  const handleCreateProject = () => {\n    console.log(AppContext.username);\n    console.log(\"hello\");\n    console.log(newProjectName);\n    console.log(\"hello\");\n    axios\n      .post(\n        `http://localhost:8085/projects/${AppContext.username}/${newProjectName}`\n      )\n      .then((response) => {\n        setProjects((prevProjects) => [...prevProjects, response.data]);\n        setNewProjectName(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error creating new project:\", error);\n      });\n  };\n\n  return (\n    <div className=\"project-container\">\n      <NewProjectForm onNewProject={fetchProjects} />\n\n      <ProjectDropdown\n        projects={projects}\n        onSelect={handleProjectSelection}\n        selectedProject={selectedProject}\n      />\n      <div className=\"content-wrapper\">\n        <ResourceList\n          resources={resources}\n          linkedResourceIds={linkedResourceIds}\n          onLink={linkResourceToProject}\n        />\n        <LinkedResourceList\n          resources={resources}\n          linkedResourceIds={linkedResourceIds}\n          onUnlink={unlinkResourceFromProject}\n          selectedProject={selectedProject}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Project/ProjectPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../../Context/AppContext\";\nimport \"./ProjectPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectPage = () => {\n  _s();\n  const {\n    username: currentUsername\n  } = useContext(AppContext);\n  const [projects, setProjects] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [linkedResourceIds, setLinkedResourceIds] = useState(new Set());\n  const [newProjectName, setNewProjectName] = useState(\"\");\n  const fetchProjectById = projectId => {\n    axios.get(`http://localhost:8085/projects/${projectId}`).then(response => {\n      const updatedProject = response.data;\n      setSelectedProject(updatedProject);\n      setLinkedResourceIds(new Set(updatedProject.resourceIds));\n    }).catch(error => {\n      console.error(`Error fetching project with ID ${projectId}:`, error);\n    });\n  };\n  useEffect(() => {\n    axios.get(\"http://localhost:8085/projects\").then(response => {\n      setProjects(response.data.filter(p => p.userName === currentUsername));\n    }).catch(error => {\n      console.error(\"Error fetching projects:\", error);\n    });\n    axios.get(\"http://localhost:8085/resources\").then(response => {\n      setResources(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching resources:\", error);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedProject && selectedProject.resourceIds) {\n      setLinkedResourceIds(new Set(selectedProject.resourceIds));\n    } else {\n      setLinkedResourceIds(new Set());\n    }\n  }, [selectedProject]);\n  const handleProjectSelection = project => {\n    setSelectedProject(project);\n  };\n  const linkResourceToProject = resourceId => {\n    if (selectedProject) {\n      axios.post(`http://localhost:8085/resources/${resourceId}/linkToProject/${selectedProject.projectId}`).then(() => {\n        fetchProjectById(selectedProject.projectId); // Refetch the project after linking a resource\n      }).catch(error => {\n        console.error(\"Error linking resource to project:\", error);\n      });\n    }\n  };\n  const unlinkResourceFromProject = resourceId => {\n    if (selectedProject) {\n      axios.delete(`http://localhost:8085/resources/${resourceId}/unlinkFromProject/${selectedProject.projectId}`).then(() => {\n        fetchProjectById(selectedProject.projectId); // Refetch the project after unlinking a resource\n      }).catch(error => {\n        console.error(\"Error unlinking resource from project:\", error);\n      });\n    }\n  };\n  const handleCreateProject = () => {\n    axios.post(`http://localhost:8085/projects/${currentUsername}/${newProjectName}`).then(response => {\n      setProjects(prevProjects => [...prevProjects, response.data]);\n      setNewProjectName(\"\");\n    }).catch(error => {\n      console.error(\"Error creating new project:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-project-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"New Project Name\",\n        value: newProjectName,\n        onChange: e => setNewProjectName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateProject,\n        children: \"Create Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-dropdown\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.projectId) || \"\",\n        onChange: e => {\n          const chosenProject = projects.find(p => p.projectId === parseInt(e.target.value, 10));\n          handleProjectSelection(chosenProject);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: project.projectId,\n          children: project.projectName\n        }, project.projectId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resources-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Unlinked Resources\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), resources.map(resource => !linkedResourceIds.has(resource.resourceId) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: resource.resourceName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => linkResourceToProject(resource.resourceId),\n            children: \"Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this)]\n        }, resource.resourceId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-resources-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Linked Resources for Project:\", (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.projectName) || \"None\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), Array.from(linkedResourceIds).map(resourceId => {\n          const resource = resources.find(r => r.resourceId === resourceId);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: resource.resourceName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => unlinkResourceFromProject(resourceId),\n              children: \"Unlink\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, resourceId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectPage, \"h+dpIWjAQb9DDAvAI+arhc1hVsQ=\");\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AppContext","jsxDEV","_jsxDEV","ProjectPage","_s","username","currentUsername","projects","setProjects","resources","setResources","selectedProject","setSelectedProject","linkedResourceIds","setLinkedResourceIds","Set","newProjectName","setNewProjectName","fetchProjectById","projectId","get","then","response","updatedProject","data","resourceIds","catch","error","console","filter","p","userName","handleProjectSelection","project","linkResourceToProject","resourceId","post","unlinkResourceFromProject","delete","handleCreateProject","prevProjects","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","chosenProject","find","parseInt","map","projectName","resource","has","resourceName","Array","from","r","_c","$RefreshReg$"],"sources":["/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Project/ProjectPage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../../Context/AppContext\";\nimport \"./ProjectPage.css\";\n\nconst ProjectPage = () => {\n  const { username: currentUsername } = useContext(AppContext);\n  const [projects, setProjects] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [linkedResourceIds, setLinkedResourceIds] = useState(new Set());\n  const [newProjectName, setNewProjectName] = useState(\"\");\n\n  const fetchProjectById = (projectId) => {\n    axios\n      .get(`http://localhost:8085/projects/${projectId}`)\n      .then((response) => {\n        const updatedProject = response.data;\n        setSelectedProject(updatedProject);\n        setLinkedResourceIds(new Set(updatedProject.resourceIds));\n      })\n      .catch((error) => {\n        console.error(`Error fetching project with ID ${projectId}:`, error);\n      });\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8085/projects\")\n      .then((response) => {\n        setProjects(\n          response.data.filter((p) => p.userName === currentUsername)\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error fetching projects:\", error);\n      });\n\n    axios\n      .get(\"http://localhost:8085/resources\")\n      .then((response) => {\n        setResources(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching resources:\", error);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (selectedProject && selectedProject.resourceIds) {\n      setLinkedResourceIds(new Set(selectedProject.resourceIds));\n    } else {\n      setLinkedResourceIds(new Set());\n    }\n  }, [selectedProject]);\n\n  const handleProjectSelection = (project) => {\n    setSelectedProject(project);\n  };\n\n  const linkResourceToProject = (resourceId) => {\n    if (selectedProject) {\n      axios\n        .post(\n          `http://localhost:8085/resources/${resourceId}/linkToProject/${selectedProject.projectId}`\n        )\n        .then(() => {\n          fetchProjectById(selectedProject.projectId); // Refetch the project after linking a resource\n        })\n        .catch((error) => {\n          console.error(\"Error linking resource to project:\", error);\n        });\n    }\n  };\n\n  const unlinkResourceFromProject = (resourceId) => {\n    if (selectedProject) {\n      axios\n        .delete(\n          `http://localhost:8085/resources/${resourceId}/unlinkFromProject/${selectedProject.projectId}`\n        )\n        .then(() => {\n          fetchProjectById(selectedProject.projectId); // Refetch the project after unlinking a resource\n        })\n        .catch((error) => {\n          console.error(\"Error unlinking resource from project:\", error);\n        });\n    }\n  };\n\n  const handleCreateProject = () => {\n    axios\n      .post(\n        `http://localhost:8085/projects/${currentUsername}/${newProjectName}`\n      )\n      .then((response) => {\n        setProjects((prevProjects) => [...prevProjects, response.data]);\n        setNewProjectName(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error creating new project:\", error);\n      });\n  };\n\n  return (\n    <div className=\"project-container\">\n      <div className=\"new-project-container\">\n        <input\n          type=\"text\"\n          placeholder=\"New Project Name\"\n          value={newProjectName}\n          onChange={(e) => setNewProjectName(e.target.value)}\n        />\n        <button onClick={handleCreateProject}>Create Project</button>\n      </div>\n\n      <div className=\"project-dropdown\">\n        <select\n          value={selectedProject?.projectId || \"\"}\n          onChange={(e) => {\n            const chosenProject = projects.find(\n              (p) => p.projectId === parseInt(e.target.value, 10)\n            );\n            handleProjectSelection(chosenProject);\n          }}\n        >\n          <option value=\"\">Select a Project</option>\n          {projects.map((project) => (\n            <option key={project.projectId} value={project.projectId}>\n              {project.projectName}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"content-wrapper\">\n        <div className=\"resources-list\">\n          <h3>Unlinked Resources</h3>\n          {resources.map(\n            (resource) =>\n              !linkedResourceIds.has(resource.resourceId) && (\n                <div key={resource.resourceId}>\n                  <span>{resource.resourceName}</span>\n                  <button\n                    onClick={() => linkResourceToProject(resource.resourceId)}\n                  >\n                    Link\n                  </button>\n                </div>\n              )\n          )}\n        </div>\n\n        <div className=\"selected-resources-list\">\n          <h3>\n            Linked Resources for Project:\n            {selectedProject?.projectName || \"None\"}\n          </h3>\n          {Array.from(linkedResourceIds).map((resourceId) => {\n            const resource = resources.find((r) => r.resourceId === resourceId);\n            return (\n              <div key={resourceId}>\n                <span>{resource.resourceName}</span>\n                <button onClick={() => unlinkResourceFromProject(resourceId)}>\n                  Unlink\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
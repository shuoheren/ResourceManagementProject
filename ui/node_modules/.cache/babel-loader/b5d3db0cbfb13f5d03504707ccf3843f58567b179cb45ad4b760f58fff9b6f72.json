{"ast":null,"code":"var _jsxFileName = \"/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Project/ProjectPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./ProjectPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectPage = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [selectedResources, setSelectedResources] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8085/projects\").then(response => {\n      setProjects(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching projects:\", error);\n    });\n    axios.get(\"http://localhost:8085/resources\").then(response => {\n      setResources(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching resources:\", error);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(\"Current selected project:\", selectedProject);\n  }, [selectedProject]);\n  const handleProjectSelection = project => {\n    console.log(\"Selected project:\", project);\n    setSelectedProject(project);\n    if (project) {\n      axios.get(`http://localhost:8085/projects/${project.projectId}/resources`).then(response => {\n        const linkedResourceIds = response.data.map(resource => resource.resourceId);\n        setSelectedResources(linkedResourceIds);\n      }).catch(error => {\n        console.error(\"Error fetching linked resources for project:\", error);\n      });\n    } else {\n      setSelectedResources([]); // clear selected resources when no project is selected\n    }\n  };\n\n  const linkResourceToProject = resourceId => {\n    if (selectedProject) {\n      axios.post(`http://localhost:8085/resources/${resourceId}/linkToProject/${selectedProject.projectId}`).then(response => {\n        setSelectedResources([...selectedResources, resourceId]);\n      }).catch(error => {\n        console.error(\"Error linking resource to project:\", error);\n      });\n    }\n  };\n  const unlinkResourceFromProject = resourceId => {\n    if (selectedProject) {\n      axios.delete(`http://localhost:8085/resources/${resourceId}/unlinkFromProject/${selectedProject.projectId}`).then(response => {\n        setSelectedResources(selectedResources.filter(id => id !== resourceId));\n      }).catch(error => {\n        console.error(\"Error unlinking resource from project:\", error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-dropdown\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.projectId) || \"\",\n        onChange: e => {\n          const chosenProject = projects.find(p => p.projectId === parseInt(e.target.value, 10));\n          handleProjectSelection(chosenProject);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: project.projectId,\n          children: project.projectName\n        }, project.projectId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resources-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Unlinked Resources\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), resources.map(resource => !selectedResources.includes(resource.resourceId) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: resource.resourceName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => linkResourceToProject(resource.resourceId),\n            children: \"Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 19\n          }, this)]\n        }, resource.resourceId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-resources-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Linked Resources for Project:\", \" \", (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.projectName) || \"None\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), selectedResources.map(resourceId => {\n          const resource = resources.find(r => r.resourceId === resourceId);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: resource.resourceName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => unlinkResourceFromProject(resourceId),\n              children: \"Unlink\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, resourceId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectPage, \"LMtD7zYhz36LsvZ5UoWCEBJk1IQ=\");\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ProjectPage","_s","projects","setProjects","resources","setResources","selectedProject","setSelectedProject","selectedResources","setSelectedResources","get","then","response","data","catch","error","console","log","handleProjectSelection","project","projectId","linkedResourceIds","map","resource","resourceId","linkResourceToProject","post","unlinkResourceFromProject","delete","filter","id","className","children","value","onChange","e","chosenProject","find","p","parseInt","target","fileName","_jsxFileName","lineNumber","columnNumber","projectName","includes","resourceName","onClick","r","_c","$RefreshReg$"],"sources":["/Users/shuohe/Desktop/ResourceManagementProject/ui/src/Pages/Project/ProjectPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./ProjectPage.css\";\n\nconst ProjectPage = () => {\n  const [projects, setProjects] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [selectedResources, setSelectedResources] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8085/projects\")\n      .then((response) => {\n        setProjects(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching projects:\", error);\n      });\n\n    axios\n      .get(\"http://localhost:8085/resources\")\n      .then((response) => {\n        setResources(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching resources:\", error);\n      });\n  }, []);\n\n  useEffect(() => {\n    console.log(\"Current selected project:\", selectedProject);\n  }, [selectedProject]);\n\n  const handleProjectSelection = (project) => {\n    console.log(\"Selected project:\", project);\n\n    setSelectedProject(project);\n\n    if (project) {\n      axios\n        .get(`http://localhost:8085/projects/${project.projectId}/resources`)\n        .then((response) => {\n          const linkedResourceIds = response.data.map(\n            (resource) => resource.resourceId\n          );\n          setSelectedResources(linkedResourceIds);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching linked resources for project:\", error);\n        });\n    } else {\n      setSelectedResources([]); // clear selected resources when no project is selected\n    }\n  };\n\n  const linkResourceToProject = (resourceId) => {\n    if (selectedProject) {\n      axios\n        .post(\n          `http://localhost:8085/resources/${resourceId}/linkToProject/${selectedProject.projectId}`\n        )\n        .then((response) => {\n          setSelectedResources([...selectedResources, resourceId]);\n        })\n        .catch((error) => {\n          console.error(\"Error linking resource to project:\", error);\n        });\n    }\n  };\n\n  const unlinkResourceFromProject = (resourceId) => {\n    if (selectedProject) {\n      axios\n        .delete(\n          `http://localhost:8085/resources/${resourceId}/unlinkFromProject/${selectedProject.projectId}`\n        )\n        .then((response) => {\n          setSelectedResources(\n            selectedResources.filter((id) => id !== resourceId)\n          );\n        })\n        .catch((error) => {\n          console.error(\"Error unlinking resource from project:\", error);\n        });\n    }\n  };\n\n  return (\n    <div className=\"project-container\">\n      {/* Project Selection Dropdown */}\n      <div className=\"project-dropdown\">\n        <select\n          value={selectedProject?.projectId || \"\"}\n          onChange={(e) => {\n            const chosenProject = projects.find(\n              (p) => p.projectId === parseInt(e.target.value, 10)\n            );\n            handleProjectSelection(chosenProject);\n          }}\n        >\n          <option value=\"\">Select a Project</option>\n          {projects.map((project) => (\n            <option key={project.projectId} value={project.projectId}>\n              {project.projectName}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"content-wrapper\">\n        <div className=\"resources-list\">\n          <h3>Unlinked Resources</h3>\n          {resources.map(\n            (resource) =>\n              !selectedResources.includes(resource.resourceId) && (\n                <div key={resource.resourceId}>\n                  <span>{resource.resourceName}</span>\n                  <button\n                    onClick={() => linkResourceToProject(resource.resourceId)}\n                  >\n                    Link\n                  </button>\n                </div>\n              )\n          )}\n        </div>\n\n        <div className=\"selected-resources-list\">\n          <h3>\n            Linked Resources for Project:{\" \"}\n            {selectedProject?.projectName || \"None\"}\n          </h3>\n          {selectedResources.map((resourceId) => {\n            const resource = resources.find((r) => r.resourceId === resourceId);\n            return (\n              <div key={resourceId}>\n                <span>{resource.resourceName}</span>\n                <button onClick={() => unlinkResourceFromProject(resourceId)}>\n                  Unlink\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}